pollutantmean("specdata", "sulfate", 1:3)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 9:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 9:)
pollutantmean("specdata", "sulfate", 9:12)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("spectdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:5)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:5)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 10:10)
pollutantmean("specdata", "sulfate", 10:11)
?list.files
source("testpolumean")
source("testpolumean.R")
source("testpollumean.R")
source('~/testpollumean.R')
source('~/testpollumean.R')
pollutantmean("specdata", "sulfate", 1:10)
values
source('~/testpollumean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
?vector
?sprintf
getwd()
list.files("specdata", pattern="*.csv")
sprintf("%03d.csv", 3)
gettextf()
gettextf(003)
gettextf(%03d)
getwd()
list.files("specdata", format="*.csv")
list.files("specdata", format= "*.csv")
?list.files
list.files(path="specdata", format ="*.csv")
list.files(path="specdata", pattern ="*.csv")
getwd()
?sprintf
data <- read.csv("specdata/001.csv")
data <- data{!is.na[data]}
data <- data[!is.na[data]]
bad <- is.na[data]
class(data)
d <- data[, "sulfate"]
class(d)
d[is.na(d)]
d <- data[, "sulfate"]
bad <- is.na(d)
c <- d[!bad]
values <- c(values, c)
values <- vector()
values
class(values)
values <- c(values, c)
values
?vestor
?vector
?sprintf
d <- data[, "sulfate"]
class(d)
ls()
rm(list=ls())
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
data_list
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
source("pollutantmean.R")
polluantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("submitscript1.R")
submit()
q()
?data.frame
?nrow
data <- read.csv("specdata/001.csv")
nrow(data)
source("complete.R")
complete("specdata", 1)
arg(data.frame)
args(data.frame)
ids < vector()
ids <- vector()
ids
ids <- c(ids, 1)
ids
class(ids)
ids <- c(ids, 2)
ids
?c
?data.frame
obs <- vector()
obs < c(12, 15)
obs <- c(12, 15)
data.frame(ids, obs)
?complete.cases
data <- data.frame(ids, obs)
data
complete.cases(data)
data[complete.cases(data)]
data.frame(ids, obs)
source("complete.R")
complete("specdata", 1)
ls()
rm(list=ls())
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
data <- read.csv("specdata/001csv")
getwd()
data <- read.csv("specdata/001.csv")
good <- complete.cases(data)
data_com <- data[good]
good
data_com <- data[, good]
data_com <- data[good, ]
data_com
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
?rbind
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
rm(list=ls())
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
data <- read.csv("specdata/001.csv")
good <- complet.cases(data)
good <- complete.cases(data)
data_com <- data[good, ]
ids <- vector()
obs <- vector()
ids <- c(ids, 1)
n <- nrow(data_com)
n
class(n)
obs <- c(obs, n)
output <- data.frame(id=ids, obs=nobs)
class(ids)
x <- c(1,2,3,4,)
x <- c(1,2,3,4,5)
y <- c("a", "b", "c", "c", "g")
data.frame(x,y)
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
?print
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
good <- complete.cases(read.csv("specdata.001.csv"))
good <- complete.cases(read.csv("specdata/001.csv"))
class(good)
good
source("submitscript1.R")
submit()
5
submit()
submit()
3
submit()
submit()
submit()
submit()
submit()
ls()
rm(list=ls())
car("complete.R")
?car
?cars
rm(list=ls())
?cor
data <- read.csv("specdata/059.csv")
data[1,]
data_good <- complete.cases(data, )
good <- complete.cases(data)
data_good <- data[good, ]
data_ggod
data_good
data_i <- good[5,]
data_i <- data_good[5,]
cor(data_good$sulfate, data_good$nitrate)
rm(list=ls())
scource("corr.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
full <- complete("specdata")
nobs <- nrow(full)
nobs
row_i <- full[1, ]
new_cor <- cor(row_i$sulfate, row_i$nitrate)
?cor
row_i
row_i[,nobs]
row_i[,"nobs"]
full[, id]
full[, "id"]
rm(list=ls())
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("submitscript1.R")
submit()
submit()
submit()
library(datasets)
data(iris)
?iris
?split
flow_v <- split(iris,virginica)
head(iris)
flow_v <- split(iris,"virginica")
head(flow_v)
nrow(flow_v)
flow_v <- iris$Sepal.Length
vir_sl <- split(flow_v, "virginica")
head(vir_sl)
mean(vir_sl)
?mean
mean(vir_sl)
ls()
rm(list=ls())
clear()
library(datasets)
data(iris)
summary(iris)
f <- c("sotosa", "versicolor", "virginica")
split(iris, f)
>gl
?gl
f <- gl(3, 50)
iris_split <- split(iris, f)
iris_split
tapply(iris_split, mean)
lapply(iris_split, mean)
iris_s <- iris[, "Sepal.Length"]
iris_s
iris_split <- split(iris_s, f)
iris_split
sapply(iris_s, mean)
lapply(iris_s, mean)
iris_split
rm(list=ls())
library(datasets)
data(iris)
s <- split(iris, iris$Species)
lapply(s, mean)
s
lapply(s, function(x) colMean(x[, c("setosa","versicolor","virginica")]))
lapply(s, function(x) colMeans(x[, c("setosa","versicolor","virginica")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length"]))
lapply(s, function(x) {colMeans(x[, c("Sepal.Length")]})
lapply(s, function(x) colMeans(x[, c("Sepal.Length")])
library(datasets)
data(iris)
summary(iris)
s <- split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, "Sepal.Length"]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
test <- apply(iris[, 1:4], 1, mean)
test
test <- apply(iris[, 1:4], 2, mean)
test
library(datasets)
data(mtcars)
summary(mtcars)
taplly(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mpg_cyl <- tapply(mtcars$mpg, mtcars$cyl, mean)
mpg_cyl&4
mpg_cyl[4]
mpg_cyl[,1]
mpg_cyl[1,]
mpg_cyl$4
mpg_cyl$"4"
26.66364-15.1
debug(ls)
ls()
q
q()
q
library(datasets)
data(iris)
apply(irs[,1:4], 2, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl, mean)
q
sapply(split(mtcars$mpg, mtcars$cyl, mean)
q
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
rm(list=ls())
g
?solve
?matrix
x <- matrix(1:16, 4, 4)
x
getwd()
## Computing the inverse of a square matrix
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
casheSolve(x)
makeCacheMatrix(x)
casheSolve(x, function(x) 1/x)
cacheSolve(x, function(x) 1/x)
cacheSolve(x, ...)
cacheSolve(x)
rm(list=ls())
test <- rnorm(20)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
cachemean(test)
makeVector(x)
makeVector(test)
cachemean(test)
cachemean(makeVector, test)
cachemean(makeVector(test))
mean(test)
cachemean(makeVector(test))
test_mean <- mean(test)
cachemean(makeVector(test))
test_mean$getmean()
rm(list=ls())
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
test <- rnorm(16)
cacheSolve(makeCacheMatrix(test))
?matrix
M <- matrix(1:4, 2, 2)
cachematrix <- makeCacheMatrix(M)
cacheSolve(cachematrix)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
M <- matrix(c(1,2,3,4,), nrow=2, ncol=2)
M <- matrix(c(1,2,3,4), nrow=2, ncol=2)
cacheMatrix <- makeCacheMatrix(M)
cachSolve(cacheMatrix)
cacheSolve(cacheMatrix)
casheMatrix$set(M)
cacheMatrix$set(M)
?inverse
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheMatrix <- make cacheMatrix(test)
cacheMatrix <- makecacheMatrix(test)
cacheMatrix <- makeCacheMatrix(test)
cacheSolve(cacheMatrix)
cacheMatrix$setinv(solve(test))
traceback()
cacheSolve(cacheMatrix)
traceback()
class(cacheMatrix)
cachematrix
makeCacheMatrix(test)
class(test)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheMatrix <- makeCacheMatrix(test)
cacheSolve(cacheMatrix)
trackback
traceback
cacheSolve(cacheMatrix)
traceback
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheMatrix <- makeCacheMatrix(test)
cacheSolve(cacheMatrix)
traceback
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each =5)
x
e <- rnorm(10, 0, 20)
y<- 0.5 + 2 * x + e
plot(x,y)
rm(list=ls())
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[, 11])
a.state <- outcome[, 7]
head(a.state)
r.state <- outcome[, 7]
r.state$"TX"
r.state["TX"]
r.state["AL"]
r.state
?subset
r.state$TX
str(r.state)
class(r.state)
class(outcome[, 7])
class(outcome[7])
r.state <- outcome[7]
r.state
r.state$"TX"
r.state$"AL"
r.state["AL"]
r.state["AL", ]
r.state <- as.list(outcome[, 7])
r.state
r.state$"TX"
r.state$"AL"
r.state["AL"]
unique(r.state)
r.state <- outcome[, 7]
unique(r.state)
r.state <- unique(r.state)
r.state$"AL"
r.state["AL"]
source('~/GitHub/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
setwd("GitHub/ProgrammingAssignment3")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
source("best.R")
best("TX", "heart attack")
?read.csv
source("best.R")
best("TX", "heart attack")
?num
?rank
?order
source("rankhospital.R")
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MC", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
